(this.webpackJsonpnew=this.webpackJsonpnew||[]).push([[0],{20:function(e,t,n){e.exports=n.p+"static/media/32FFF.1c4f20fe.xyz"},25:function(e,t,n){e.exports=n(38)},31:function(e,t,n){},38:function(e,t,n){"use strict";n.r(t);var r=n(15),a=n.n(r),o=n(17),c=n(2),i=n(0),u=n.n(i),s=n(18),l=n.n(s),m=n(5),f=n(19),p=(n(31),n(20)),b=n.n(p);function v(e){var t=e.points,n=t.map((function(e){return e.slice(0,3).map((function(e){return Number(e)}))})).flat(),r=t.map((function(e){return e.slice(3).map((function(e){return Number(e)/255}))})).flat(),a=Object(i.useMemo)((function(){return{time:{value:1}}}),[]),o=Object(i.useMemo)((function(){return new Float32Array(n)}),[n]),c=Object(i.useMemo)((function(){return new Float32Array(r)}),[r]),s=Object(i.useRef)();return Object(m.c)((function(e){var t=e.clock;s.current&&(s.current.material.uniforms.time.value=t.getElapsedTime(),s.current.geometry.verticesNeedUpdate=!0)})),u.a.createElement("points",{ref:s},u.a.createElement("bufferGeometry",{attach:"geometry"},u.a.createElement("bufferAttribute",{attachObject:["attributes","position"],count:o.length/3,array:o,itemSize:3}),u.a.createElement("bufferAttribute",{attachObject:["attributes","color"],count:c.length/3,array:c,itemSize:3})),u.a.createElement("shaderMaterial",{attach:"material",uniforms:a,vertexShader:"\nuniform float time;\nvarying vec3 vColor;\nvoid main() {\n    vColor = color;\n    gl_Position = projectionMatrix \n        * modelViewMatrix\n        * vec4(position, 1.0);\n    gl_PointSize = 3.0;\n}",fragmentShader:"\nvarying vec3 vColor;\nvoid main() {\n  gl_FragColor = vec4( vColor.rgb, 1.0 );\n}",vertexColors:!0}))}function h(){var e=Object(i.useRef)(),t=Object(m.d)(),n=t.camera,r=t.gl;return Object(m.c)((function(){return e.current.update()})),u.a.createElement("orbitControls",{ref:e,args:[n,r.domElement],enableDamping:!0,dampingFactor:.05,rotateSpeed:.6})}Object(m.b)({OrbitControls:f.a});var d=function(){var e=Object(i.useState)(),t=Object(c.a)(e,2),n=t[0],r=t[1];return Object(i.useEffect)((function(){(function(){var e=Object(o.a)(a.a.mark((function e(){var t,n;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log(window.location.hostname),e.next=3,fetch("sptch.github.io"!==window.location.hostname?b.a:"https://github.com/sptch/shader-points/raw/main/src/assets/32FFF.xyz");case 3:return e.next=5,e.sent.text();case 5:t=e.sent,n=t.split("\n"),console.log(n[0]),r(n.map((function(e){return e.split(" ")})));case 9:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}})()()}),[r]),u.a.createElement(m.a,{camera:{position:[0,0,20]}},n&&u.a.createElement(v,{points:n}),u.a.createElement(h,null))};l.a.render(u.a.createElement(d,null),document.getElementById("root"))}},[[25,1,2]]]);
//# sourceMappingURL=main.1c16ebb5.chunk.js.map